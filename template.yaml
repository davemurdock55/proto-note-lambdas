AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: >
  wiki-realms-lambdas

  Sample SAM Template for wiki-realms-lambdas

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3

    # You can add LoggingConfig parameters such as the Logformat, Log Group, and SystemLogLevel or ApplicationLogLevel. Learn more here https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-resource-function.html#sam-function-loggingconfig.
    LoggingConfig:
      LogFormat: JSON

Resources:
  # Hello World function
  HelloWorldFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/hello-world/
      Handler: app.lambdaHandler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        HelloWorld:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /hello
            Method: get
      Layers:
        - !Ref LayerCommons
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2021
        Sourcemap: true
        EntryPoints:
          - app.ts
        External:
          - commons

  # Register function
  RegisterFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/auth/register
      Handler: app.handler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        Login:
          Type: Api
          Properties:
            Path: /auth/register
            Method: post
      Layers:
        - !Ref LayerCommons
        - !Ref LayerAuth
      Policies:
        - DynamoDBCrudPolicy:
            TableName: login-database
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2021
        Sourcemap: true
        EntryPoints:
          - app.ts
        External:
          - commons
          - auth

  # Login function
  LoginFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: functions/auth/login
      Handler: app.handler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        Login:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /auth/login
            Method: post
      Layers:
        - !Ref LayerCommons
        - !Ref LayerAuth
      Policies:
        - DynamoDBCrudPolicy:
            TableName: login-database
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2021
        Sourcemap: true
        EntryPoints:
          - app.ts
        External:
          - commons
          - auth

  # Logout function
  LogoutFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/auth/logout
      Handler: app.handler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        Login:
          Type: Api
          Properties:
            Path: /auth/logout
            Method: post
      Layers:
        - !Ref LayerCommons
        - !Ref LayerAuth
      Policies:
        - DynamoDBCrudPolicy:
            TableName: login-database
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2021
        Sourcemap: true
        EntryPoints:
          - app.ts
        External:
          - commons
          - auth

  # Verify function
  VerifyFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: functions/auth/verify
      Handler: app.handler
      Runtime: nodejs22.x
      Architectures:
        - x86_64
      Events:
        Login:
          Type: Api
          Properties:
            Path: /auth/verify
            Method: post
      Layers:
        - !Ref LayerCommons
        - !Ref LayerAuth
      Policies:
        - DynamoDBCrudPolicy:
            TableName: login-database
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: es2021
        Sourcemap: true
        EntryPoints:
          - app.ts
        External:
          - commons
          - auth

  # Common Layer Resources
  LayerCommons:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layers/commons/
      CompatibleRuntimes:
        - nodejs22.x
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: makefile

  # Auth Layer
  LayerAuth:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layers/auth/
      CompatibleRuntimes:
        - nodejs22.x
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: makefile

  # Data Layer
  LayerData:
    Type: AWS::Serverless::LayerVersion
    Properties:
      ContentUri: layers/data/
      CompatibleRuntimes:
        - nodejs22.x
      RetentionPolicy: Delete
    Metadata:
      BuildMethod: makefile

Outputs:
  # ServerlessRestApi is an implicit API created out of Events key under Serverless::Function
  # Find out more about other implicit resources you can reference within SAM
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api

  # Hello World function
  HelloWorldApi:
    Description: API Gateway endpoint URL for Prod stage for Hello World function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/hello/"
  HelloWorldFunction:
    Description: Hello World Lambda Function ARN
    Value: !GetAtt HelloWorldFunction.Arn
  HelloWorldFunctionIamRole:
    Description: Implicit IAM Role created for Hello World function
    Value: !GetAtt HelloWorldFunctionRole.Arn

  # Register function
  RegisterApi:
    Description: API Gateway endpoint URL for Prod stage for Register function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/register/"
  RegisterFunction:
    Description: Register Lambda Function ARN
    Value: !GetAtt RegisterFunction.Arn
  RegisterFunctionIamRole:
    Description: Implicit IAM Role created for Register function
    Value: !GetAtt RegisterFunctionRole.Arn

  # Login function
  LoginApi:
    Description: API Gateway endpoint URL for Prod stage for Login function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/login/"
  LoginFunction:
    Description: Login Lambda Function ARN
    Value: !GetAtt LoginFunction.Arn
  LoginFunctionIamRole:
    Description: Implicit IAM Role created for Login function
    Value: !GetAtt LoginFunctionRole.Arn

  # Logout function
  LogoutApi:
    Description: API Gateway endpoint URL for Prod stage for Log out function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/logout/"
  LogoutFunction:
    Description: Log out Lambda Function ARN
    Value: !GetAtt LogoutFunction.Arn
  LogoutFunctionIamRole:
    Description: Implicit IAM Role created for Log out function
    Value: !GetAtt LogoutFunctionRole.Arn

  # Verify function
  VerifyApi:
    Description: API Gateway endpoint URL for Prod stage for Verify function
    Value: !Sub "https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth/verify/"
  VerifyFunction:
    Description: Verify Lambda Function ARN
    Value: !GetAtt VerifyFunction.Arn
  VerifyFunctionIamRole:
    Description: Implicit IAM Role created for Verify function
    Value: !GetAtt VerifyFunctionRole.Arn
